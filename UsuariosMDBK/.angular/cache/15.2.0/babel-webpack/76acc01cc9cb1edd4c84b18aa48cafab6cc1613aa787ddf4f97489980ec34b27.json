{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Roberth/UsuariosMDBK/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UsuariosService {\n  constructor(http) {\n    this.http = http;\n    this.url_api = 'https://localhost:7030';\n  }\n  getUsers() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return _this.http.get(`${_this.url_api}/api/Usuarios`);\n    })();\n  }\n  getUsersId(id) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      return yield _this2.http.get(`${_this2.url_api}/api/Usuarios/${id}`);\n    })();\n  }\n}\nUsuariosService.ɵfac = function UsuariosService_Factory(t) {\n  return new (t || UsuariosService)(i0.ɵɵinject(i1.HttpClient));\n};\nUsuariosService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UsuariosService,\n  factory: UsuariosService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,eAAe;EAI1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,YAAO,GAAW,wBAAwB;EAEF;EAElCC,QAAQ;IAAA;IAAA;MACZ,OAAO,KAAI,CAACD,IAAI,CAACE,GAAG,CAAa,GAAG,KAAI,CAACC,OAAO,eAAe,CAAC;IAAA;EAClE;EAEMC,UAAU,CAACC,EAAU;IAAA;IAAA;MACzB,aAAa,MAAI,CAACL,IAAI,CAACE,GAAG,CAAa,GAAG,MAAI,CAACC,OAAO,iBAAiBE,EAAE,EAAE,CAAC;IAAA;EAC9E;;AAZWP,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAQ,SAAfR,eAAe;EAAAS,YAFd;AAAM","names":["UsuariosService","constructor","http","getUsers","get","url_api","getUsersId","id","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Roberth\\UsuariosMDBK\\src\\app\\servicios\\usuarios.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Usuarios } from '../models/usuarios.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuariosService {\n\n  url_api: string = 'https://localhost:7030'\n\n  constructor(private http: HttpClient) { }\n\n  async getUsers(): Promise<Observable<Usuarios[]>> {\n    return this.http.get<Usuarios[]>(`${this.url_api}/api/Usuarios`)\n  }\n\n  async getUsersId(id: string) {\n    return await this.http.get<Usuarios[]>(`${this.url_api}/api/Usuarios/${id}`)\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}